map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

server {
# key must be of 32 bytes long
encrypted_session_key "abcdefghijklmnopqrstuvwxyz123456";

# iv must not be longer than 16 bytes
#   default: "deadbeefdeadbeef" (w/o quotes)
encrypted_session_iv "1234567812345678";

# default: 1d (1 day)
encrypted_session_expires 3600; # in sec
    listen 80;
    location /testapi1 {
        default_type text/html;
        content_by_lua_block {
            ngx.say("<p>hello, world 1</p>")
        }
    }
    location /testapi2 {
        default_type text/html;
        content_by_lua_block {
            ngx.log(ngx.STDERR, 'your message here')
            ngx.say("<p>hello, world 2</p>")
        }
    }
    location /encrypt {
    default_type text/html;
    set $raw  "";
    set $session "";
    set_by_lua_block $raw{
        return ngx.var.arg_host
    }
    set_encrypt_session $session $raw;
    set_encode_base32 $session; # from the ngx_set_misc module
    add_header Set-Cookie 'host_name=$session';  # from the ngx_headers module
    return 200 "All Good";
    }
    location /decrypt {
        default_type text/html;
        set_decode_base32 $session $cookie_host_name; # from the ngx_set_misc module
        set_decrypt_session $raw $session;
        if ($raw = '') {
            # bad session
        }
        echo $raw;
    }
location ~ ^/remote/(.*)$ {
    resolver 127.0.0.11;
    default_type text/html;
    set_decode_base32 $session $cookie_host_name; # from the ngx_set_misc module
    set_decrypt_session $raw $session;
    set $ho_uri "dry-sun"; # this line is required to create $my_var at config time
    if ($raw = '') {
        # bad session
    }
    proxy_pass https://$ho_uri:6901/$1$is_args$args;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
}
location ~ /websockify{
    resolver 127.0.0.11 8.8.8.8;
    default_type text/html;
    set_decode_base32 $session $cookie_host_name; # from the ngx_set_misc module
    set_decrypt_session $raw $session;
    set $ho_uri "dry-sun"; # this line is required to create $my_var at config time
    if ($raw = '') {
        # bad session
    }
    proxy_pass https://$raw:6901/$1$is_args$args;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_set_header Host $host;}
}
